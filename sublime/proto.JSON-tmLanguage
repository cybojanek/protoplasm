{ "name": "Proto",
  "scopeName": "source.proto",
  "fileTypes": ["proto"],
  "patterns": [
    { "include": "#subclass-definition" },
    { "include": "#class-definition" },
    { "include": "#function-definition" },
    { "include": "#comment-line" },
    { "include": "#control-flow" },
    { "include": "#control" },
    { "include": "#function-source" },
    { "include": "#storage-type" },
    { "include": "#constants" },
    { "include": "#variables-declare" },
    { "include": "#variables" },
    { "include": "#numeric" },
    { "include": "#operator-logic" },
    { "include": "#operator-comparison" },
    { "include": "#operator-arithmetic" },
    { "include": "#operator-assignment" }
  ],
  "repository": {
    "subclass-definition": {
        "begin": "^([\\s]*)(class)([\\s]+)([\\w]+)([\\s]+)(extends)([\\s]+)([\\w]+)",
        "beginCaptures": {
            "2": { "name": "keyword.control.proto" },
            "4": { "name": "storage.type.proto" },
            "6": { "name": "keyword.control.proto" },
            "8": { "name": "storage.type.proto" }
        },
        "end": "(?={)"
    },
    "class-definition": {
        "begin": "^([\\s]*)(class)([\\s]+)([\\w]+)",
        "beginCaptures": {
            "2": { "name": "keyword.control.proto" },
            "4": { "name": "storage.type.proto" }
        },
        "end": "(?={)"
    },
    "function-definition": {
        "begin": "^([\\s]*)(?!if|then|else|while|do|for|new|return)([\\w]+)([\\[\\]]*)([\\s]+)([_a-zA-Z]+)([\\s]*\\()",
        "beginCaptures": {
            "2": { "name": "storage.type.proto" },
            "5": { "name": "entity.name.function.proto" }
        },
        "end": "(?={)",
        "patterns": [
          { "include": "#parameters-declare" }
        ]
    },
    "comment-line": {
        "match": "//.*$\\n?",
        "name": "comment.line.double-slash.proto",
        "comment": "Single line comments"
    },
    "control-flow": {
        "match": "\\b(if|then|else|while|do|for|return)\\b",
        "name": "keyword.control.flow.proto",
        "comment": "Control flow keywords"
    },
    "control": {
        "match": "\\b(new|this|super|extends|class)\\b",
        "name": "keyword.control.proto",
        "comment": "Control keywords"
    },
    "function-source": {
        "match": "\\b(print|input)\\b",
        "name": "support.function.source.proto",
        "comment": "Built in functions"
    },
    "storage-type": {
        "match": "\\b(int|bool|void|class)\\b",
        "name": "storage.type.proto",
        "comment": "Built in types"
    },
    "constants": {
        "match": "\\b(true|false)\\b",
        "name": "constant.language.proto",
        "comment": "Built in constants"
    },
    "parameters-declare": {
        "begin": "([_a-zA-Z]\\w*)([\\[\\]]*)([\\s]+)([_a-zA-Z]\\w*)",
        "beginCaptures": {
            "1": { "name": "storage.type.proto" },
            "4": { "name": "variable.parameter.proto" }
        },
        "end": "."
    },
    "variables-declare": {
        "begin": "([_a-zA-Z]\\w*)([\\[\\]]*)([\\s]+)(?!if|then|else|while|do|for|new|return)([_a-zA-Z]\\w*)",
        "beginCaptures": {
            "1": { "name": "storage.type.proto" },
            "4": { "name": "variable.other.proto" }
        },
        "end": "."
    },
    "variables": {
        "match": "[_a-zA-Z]\\w*",
        "name": "variable.other.proto",
        "comment": "Variable names"
    },
    "numeric": {
        "match": "\\d+",
        "name": "constant.numeric.integer.proto",
        "comment": "Integers"
    },
    "operator-logic": {
        "match": "(!|&&|\\|\\|)",
        "name": "keyword.operator.logical.proto",
        "comment": "Logic operators"
    },
    "operator-comparison": {
        "match": "(==|>=|<=|>|<|!=)",
        "name": "keyword.operator.comparison.proto",
        "comment": "Comparison operators"
    },
    "operator-arithmetic": {
        "match": "(\\+|\\*|-|%|/|\\+\\+|--)",
        "name": "keyword.operator.arithmetic.proto",
        "comment": "Arithmetic operators"
    },
    "operator-assignment": {
        "match": "=",
        "name": "keyword.operator.assignment.proto",
        "comment": "Assignment operator"
    }
  },
  "uuid": "284b6004-1d26-42d2-9ab1-5d8b75b058e7"
}